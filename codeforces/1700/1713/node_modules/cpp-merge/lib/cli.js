#!/usr/bin/env node
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const os_1 = require("os");
const process_1 = require("process");
const Cli_1 = __importDefault(require("./cli/Cli"));
const CliError_1 = __importStar(require("./cli/CliError"));
const errors_1 = require("./common/errors");
const unexpectedErrorMessage = `Sorry, an unexpected error has occurred :-(
It would be great if you spend few minutes and report it at:

  https://github.com/RandomVoid/cpp-merge/issues/new

Please attach following information:
`;
const cli = new Cli_1.default();
try {
    const args = process_1.argv.slice(2);
    cli.run(args);
}
catch (error) {
    if (error instanceof CliError_1.default) {
        process_1.stderr.write(error.message);
        process_1.stderr.write(os_1.EOL);
        (0, process_1.exit)(error.errorCode);
    }
    process_1.stderr.write(unexpectedErrorMessage);
    process_1.stderr.write((0, errors_1.formatErrorStack)(error));
    process_1.stderr.write(os_1.EOL);
    (0, process_1.exit)(CliError_1.ErrorCode.UnexpectedError);
}
//# sourceMappingURL=cli.js.map